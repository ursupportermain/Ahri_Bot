name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'
  DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
  DISCORD_GUILD_ID: ${{ secrets.DISCORD_GUILD_ID }}

jobs:
  test:
    runs-on: ubuntu-latest
    name: Build and Test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./Akali.Core
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      working-directory: ./Akali.Core
      
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal
      working-directory: ./Akali.Core
      continue-on-error: true

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    name: Docker Build and Test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: docker build -t akali-bot:test .
      
    - name: Test Docker image
      run: |
        docker run --rm --name akali-bot-test \
          -e DOTNET_ENVIRONMENT=Development \
          -e Discord__Token="test_token" \
          -e Discord__Guild__Id="123456789" \
          akali-bot:test dotnet --version

  docker-compose-test:
    runs-on: ubuntu-latest
    needs: test
    name: Docker Compose Test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create .env file
      run: |
        echo "DISCORD_TOKEN=test_token_for_ci" > .env
        echo "DISCORD_GUILD_ID=123456789" >> .env
        echo "DOTNET_ENVIRONMENT=Development" >> .env
        
    - name: Test docker-compose build
      run: docker-compose build
      
    - name: Test docker-compose config
      run: docker-compose config
